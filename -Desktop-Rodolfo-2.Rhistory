SS2_predictors <- data.frame(ID = ID_SS1,
treatments = treatments_SS1,
isolation = isolation_SS1,
isolation30_120480 = isolation30_120480,
isolation30120_480 = isolation30120_480,
treatments_contpast_sug = treatments_contpast_sug,
treatments_cont_pastsug = treatments_cont_pastsug,
treatments_contsug_past = treatments_contsug_past)
n_latent_tab_SS2 <- run_multiple_lv(num.lv = c(0,1,2,3),
formula = ~ treatments * isolation,
row.eff = ~ (1|ID),
y = com_herb_det_SS2, X = SS2_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
n_latent_tab_SS2 <- run_multiple_lv(num.lv = c(0,1,2,3),
formula = ~ treatments * isolation,
y = com_herb_det_SS2, X = SS2_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
n_latent_tab_SS2
model_herb_det_selection_SS2 <- run_multiple_gllvm(formulas = list(~ treatments,
~ isolation,
~ treatments + isolation,
~ treatments * isolation),
names = c("Treatments",
"Isolation",
"Isolation + Treatments",
"Isolation * Treatments"),
no_effect = TRUE,
num.lv = 0,
X = SS2_predictors,
y = com_herb_det_SS2,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS2
model_herb_det_selection_SS2$AICc_tab
model_herb_det_selection_SS2_post_hoc_treatments <- run_multiple_gllvm(formulas = list(~ treatments + isolation,
~ treatments_contpast_sug + isolation,
~ treatments_cont_pastsug + isolation,
~ treatments_contsug_past + isolation),
names = c("control # pasture # sugarcane",
"(control = pasture) # sugarcane",
"control # (pasture = sugarcane)",
"(control = sugarcane) # pasture"),
no_effect = FALSE,
num.lv = 0,
X = SS2_predictors,
X_row = data.frame(ID = ID_SS2_3_4),
y = com_herb_det_SS2,
row.eff = ~ (1|ID),
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS2_post_hoc_treatments$AICc_tab
model_herb_det_selection_SS2_post_hoc_isolation <- run_multiple_gllvm(formulas = list(~ isolation + treatments_cont_pastsug,
~ isolation30120_480 + treatments_cont_pastsug,
~ isolation30_120480 + treatments_cont_pastsug),
names = c("30 # 120 # 480",
"(30 = 120) # 480",
"30 # (120 = 480)"),
no_effect = FALSE,
num.lv = 0,
X = SS2_predictors,
X_row = data.frame(ID = ID_SS2_3_4),
y = com_herb_det_SS2,
row.eff = ~ (1|ID),
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS2_post_hoc_isolation$AICc_tab
SS3_predictors <- data.frame(ID = ID_SS1,
treatments = treatments_SS1,
isolation = isolation_SS1,
isolation30_120480 = isolation30_120480,
isolation30120_480 = isolation30120_480,
treatments_contpast_sug = treatments_contpast_sug,
treatments_cont_pastsug = treatments_cont_pastsug,
treatments_contsug_past = treatments_contsug_past)
n_latent_tab_SS3 <- run_multiple_lv(num.lv = c(0,1,2,3),
formula = ~ treatments * isolation,
row.eff = ~ (1|ID),
y = com_herb_det_SS3, X = SS3_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
n_latent_tab_SS3
model_herb_det_selection_SS3 <- run_multiple_gllvm(formulas = list(~ treatments,
~ isolation,
~ treatments + isolation,
~ treatments * isolation),
names = c("Treatments",
"Isolation",
"Isolation + Treatments",
"Isolation * Treatments"),
no_effect = TRUE,
num.lv = 0,
X = SS3_predictors,
y = com_herb_det_SS3,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS3
model_herb_det_selection_SS3$AICc_tab
model_herb_det_selection_SS3$AICc_tab
model_herb_det_selection_SS3_post_hoc_treatments <- run_multiple_gllvm(formulas = list(~ treatments + isolation,
~ treatments_contpast_sug + isolation,
~ treatments_cont_pastsug + isolation,
~ treatments_contsug_past + isolation),
names = c("control # pasture # sugarcane",
"(control = pasture) # sugarcane",
"control # (pasture = sugarcane)",
"(control = sugarcane) # pasture"),
no_effect = FALSE,
num.lv = 0,
X = SS3_predictors,
y = com_herb_det_SS3,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS3_post_hoc_treatments$AICc_tab
model_herb_det_selection_SS3_post_hoc_isolation <- run_multiple_gllvm(formulas = list(~ isolation + treatments_cont_pastsug,
~ isolation30120_480 + treatments_cont_pastsug,
~ isolation30_120480 + treatments_cont_pastsug),
names = c("30 # 120 # 480",
"(30 = 120) # 480",
"30 # (120 = 480)"),
no_effect = FALSE,
num.lv = 0,
X = SS3_predictors,
y = com_herb_det_SS3,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS3_post_hoc_isolation$AICc_tab
SS4_predictors <- data.frame(ID = ID_SS1,
treatments = treatments_SS1,
isolation = isolation_SS1,
isolation30_120480 = isolation30_120480,
isolation30120_480 = isolation30120_480,
treatments_contpast_sug = treatments_contpast_sug,
treatments_cont_pastsug = treatments_cont_pastsug,
treatments_contsug_past = treatments_contsug_past)
n_latent_tab_SS4 <- run_multiple_lv(num.lv = c(0,1,2,3),
formula = ~ treatments * isolation,
row.eff = ~ (1|ID),
y = com_herb_det_SS4, X = SS4_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
n_latent_tab_SS4
model_herb_det_selection_SS4 <- run_multiple_gllvm(formulas = list(~ treatments,
~ isolation,
~ treatments + isolation,
~ treatments * isolation),
names = c("Treatments",
"Isolation",
"Isolation + Treatments",
"Isolation * Treatments"),
no_effect = TRUE,
num.lv = 0,
X = SS4_predictors,
X_row = data.frame(ID = ID_SS2_3_4),
y = com_herb_det_SS4,
row.eff = ~ (1|ID),
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS4 <- run_multiple_gllvm(formulas = list(~ treatments,
~ isolation,
~ treatments + isolation,
~ treatments * isolation),
names = c("Treatments",
"Isolation",
"Isolation + Treatments",
"Isolation * Treatments"),
no_effect = TRUE,
num.lv = 0,
X = SS4_predictors,
y = com_herb_det_SS4,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS4
model_herb_det_selection_SS4$AICc_tab
model_herb_det_selection_SS4_post_hoc_treatments <- run_multiple_gllvm(formulas = list(~ treatments,
~ treatments_contpast_sug,
~ treatments_cont_pastsug,
~ treatments_contsug_past),
names = c("control # pasture # sugarcane",
"(control = pasture) # sugarcane",
"control # (pasture = sugarcane)",
"(control = sugarcane) # pasture"),
no_effect = FALSE,
num.lv = 0,
X = SS4_predictors,
y = com_herb_det_SS4,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS4_post_hoc_treatments$AICc_tab
SS4_predictors <- data.frame(treatments = treatments_SS1,
isolation = isolation_SS1)
sum_com_herb_det_SS4 <- sum_com_SS4[,Trait_SS4_sum$trophic == "consumer"]
col_SS4 <- rep("darkolivegreen3", ncol(sum_com_herb_det_SS4))
col_SS4[Trait_SS4$trait[Trait_SS4$trophic == "consumer"] == "insect_consumer" ] <- "cyan3"
fit_SS4_plot <- gllvm(sum_com_herb_det_SS4,
formula = ~ 1,
family = "negative.binomial",
method = "VA",
n.init = 10, num.lv = 2, seed = 11:20)
scaled_lvs <- get_scaled_lvs(fit_SS4_plot, alpha = 0.5)
scaled_lvs$new_species <- scaled_lvs$species/3
xmin <- min(c(scaled_lvs$sites[,1], scaled_lvs$new_species[,1]))*1.1
xmax <- max(c(scaled_lvs$sites[,1], scaled_lvs$new_species[,1]))*1.1
ymin <- min(c(scaled_lvs$sites[,2], scaled_lvs$new_species[,2]))*1.1
ymax <- max(c(scaled_lvs$sites[,2], scaled_lvs$new_species[,2]))*1.1
par(mar = c(4,4,1.25,.1), mfrow = c(2, 3))
plot_com_SS4_herb_treat_30()
plot_com_SS4_herb_treat_120()
plot_com_SS4_herb_treat_480()
par(mar = c(0,0,0,0),cex = 1.25)
plot(NA, xaxt = "n", yaxt = "n", xlim= c(0,100), ylim = c(0,100), bty = "n", ylab = "", xlab = "")
legend(x = 0, y = 100, pch = c(23, 23, 23), legend = c("Centroid - Control", "Centroid - Pasture", "Centroid - Sugarcane"), pt.bg	= c(col_control_30, col_pasture_30, col_sugarcane_30), bty = "n")
plot(NA, xaxt = "n", yaxt = "n", xlim= c(0,100), ylim = c(0,100), bty = "n", ylab = "", xlab = "")
legend(x = 0, y = 100, pch = c(21, 21, 21), legend = c("Ponds - Control", "Ponds - Pasture", "Ponds - Sugarcane"), pt.bg	= c(col_control_30, col_pasture_30, col_sugarcane_30), bty = "n", pt.cex	= 0.75)
plot(NA, xaxt = "n", yaxt = "n", xlim= c(0,100), ylim = c(0,100), bty = "n", ylab = "", xlab = "")
legend(x = 0, y = 100, pch = c(21, 21), legend = c("Insects", "Amphibians"), pt.bg	= c("cyan3","darkolivegreen3"), bty = "n", pt.cex	= 2.5, pt.lwd	= 1.5)
anova(model_herb_det_selection_SS4$models$Treatments, model_herb_det_selection_SS4$models$`Isolation + Treatments`)
model_herb_det_selection_SS4$AICc_tab
anova(model_herb_det_selection_SS4$models$Treatments, model_herb_det_selection_SS4$models$`Isolation + Treatments`)
anova(model_herb_det_selection_SS4$models$Isolation, model_herb_det_selection_SS4$models$`Isolation + Treatments`)
anova(model_herb_det_selection_SS4$models$`Isolation + Treatments`, model_herb_det_selection_SS4$models$`Isolation * Treatments`)
install.packages("gllvm")
pairwise_treatments_SS4 <- pairwise_anova_gllvm(model_herb_det_selection_SS4$models$`Isolation * Treatments`,
fact = "treatments" , by = "isolation", n.init = 20, seed = 1:20, methop_p = "fdr")
pairwise_treatments_SS4
pairwise_isolation_SS4 <- pairwise_anova_gllvm(model_herb_det_selection_SS4$models$`Isolation * Treatments`,
fact = "isolation" , by = "treatments", n.init = 20, seed = 1:20, methop_p = "fdr")
pairwise_isolation_SS4
install.packages("gllvm")
install.packages("gllvm")
n_latent_tab_SS4 <- run_multiple_lv(num.lv = c(0,1,2,3),
formula = ~ treatments * isolation,
row.eff = ~ (1|ID),
y = com_herb_det_SS4, X = SS4_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
library(vegan)
library(gllvm)
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/Loading_data.R")
source("Auxiliary scripts/Ordination_plots.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/gllvm_AICc_tab.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/run_multiple_lv.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/run_multiple_gllvm.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/get_scaled_lvs.R")
com_herb_det_SS1 <- sum_com_SS1[,Trait_SS1_sum$trophic == "consumer"]
com_herb_det_SS2 <- sum_com_SS2[,Trait_SS2_sum$trophic == "consumer"]
com_herb_det_SS3 <- sum_com_SS3[,Trait_SS3_sum$trophic == "consumer"]
com_herb_det_SS4 <- sum_com_SS4[,Trait_SS4_sum$trophic == "consumer"]
SS4_predictors <- data.frame(ID = ID_SS1,
treatments = treatments_SS1,
isolation = isolation_SS1,
isolation30_120480 = isolation30_120480,
isolation30120_480 = isolation30120_480,
treatments_contpast_sug = treatments_contpast_sug,
treatments_cont_pastsug = treatments_cont_pastsug,
treatments_contsug_past = treatments_contsug_past)
n_latent_tab_SS4 <- run_multiple_lv(num.lv = c(0,1,2,3),
formula = ~ treatments * isolation,
row.eff = ~ (1|ID),
y = com_herb_det_SS4, X = SS4_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
n_latent_tab_SS4
model_herb_det_selection_SS4 <- run_multiple_gllvm(formulas = list(~ treatments,
~ isolation,
~ treatments + isolation,
~ treatments * isolation),
names = c("Treatments",
"Isolation",
"Isolation + Treatments",
"Isolation * Treatments"),
no_effect = TRUE,
num.lv = 0,
X = SS4_predictors,
y = com_herb_det_SS4,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20)
model_herb_det_selection_SS4$AICc_tab
AICc(model_herb_det_selection_SS4$models$`No Effect`)
AICc(model_herb_det_selection_SS4$models$`No Effect`)
AICc(model_herb_det_selection_SS4$models$Treatments)
AICc(model_herb_det_selection_SS4$models$Isolation)
AICc(model_herb_det_selection_SS4$models$`Isolation + Treatments`)
AICc(model_herb_det_selection_SS4$models$`Isolation * Treatments`)
model_herb_det_selection_SS4$AICc_tab
anova(model_herb_det_selection_SS4$models$Treatments, model_herb_det_selection_SS4$models$`Isolation + Treatments`)
anova(model_herb_det_selection_SS4$models$Isolation, model_herb_det_selection_SS4$models$`Isolation + Treatments`)
anova(model_herb_det_selection_SS4$models$`Isolation + Treatments`, model_herb_det_selection_SS4$models$`Isolation * Treatments`)
install.packages("gllvm")
install.packages("gllvm")
run_multiple_lv2 <- function(num.lv, correction = TRUE, multicore = TRUE,
formula = NULL,
X = NULL,
y,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20,
starting.val = "residual"){
require(gllvm)
gllvm_lv <- function(num.lv, ...){
gllvm::gllvm(num.lv = num.lv, formula = formula,
X = X,
y = y,
family = family,
method = method,
n.init = n.init, seed = seed,
starting.val = starting.val)
}
require(doParallel)
#require(pbapply)
if(isTRUE(multicore)){
n_cores <- detectCores() - 2
message(paste("Using ", n_cores, " cores"))
registerDoParallel(cores=n_cores)
cl <- makeCluster(n_cores, type="PSOCK")
models <- pblapply(num.lv, FUN = gllvm_lv, cl = cl)
#models <- parLapply(cl,num.lv, gllvm_lv)
stopCluster(cl)
}else{
models <- pblapply(num.lv, FUN = gllvm_lv)
}
AICc_tab <- gllvm_AICc_tab(models, names = as.character(num.lv), order = FALSE, correction = correction)
return(list(AICc_tab = AICc_tab, models = models))
}
library(vegan)
library(gllvm)
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/Loading_data.R")
source("Auxiliary scripts/Ordination_plots.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/gllvm_AICc_tab.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/run_multiple_lv.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/run_multiple_gllvm.R")
setwd("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals")
source("Auxiliary scripts/get_scaled_lvs.R")
com_herb_det_SS1 <- sum_com_SS1[,Trait_SS1_sum$trophic == "consumer"]
com_herb_det_SS2 <- sum_com_SS2[,Trait_SS2_sum$trophic == "consumer"]
com_herb_det_SS3 <- sum_com_SS3[,Trait_SS3_sum$trophic == "consumer"]
com_herb_det_SS4 <- sum_com_SS4[,Trait_SS4_sum$trophic == "consumer"]
SS1_predictors <- data.frame(treatments = treatments_SS1,
isolation = isolation_SS1,
isolation30120_480,
isolation30_120480)
n_latent_tab_SS12 <- run_multiple_lv2(formula = ~ treatments * isolation,
num.lv = list(0,1,2,3),
y = com_herb_det_SS1, X = SS1_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20, starting.val = 0, multicore = TRUE)
run_multiple_lv2 <- function(num.lv, correction = TRUE, multicore = TRUE,
formula = NULL,
X = NULL,
y,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20,
starting.val = "residual"){
require(gllvm)
gllvm_lv <- function(num.lv, ...){
gllvm::gllvm(num.lv = num.lv, formula = formula,
X = X,
y = y,
family = family,
method = method,
n.init = n.init, seed = seed,
starting.val = starting.val)
}
#require(doParallel)
require(pbapply)
if(isTRUE(multicore)){
n_cores <- detectCores() - 2
message(paste("Using ", n_cores, " cores"))
registerDoParallel(cores=n_cores)
cl <- makeCluster(n_cores, type="PSOCK")
models <- pblapply(num.lv, FUN = gllvm_lv, cl = cl)
#models <- parLapply(cl,num.lv, gllvm_lv)
stopCluster(cl)
}else{
models <- pblapply(num.lv, FUN = gllvm_lv)
}
AICc_tab <- gllvm_AICc_tab(models, names = as.character(num.lv), order = FALSE, correction = correction)
return(list(AICc_tab = AICc_tab, models = models))
}
n_latent_tab_SS12 <- run_multiple_lv2(formula = ~ treatments * isolation,
num.lv = list(0,1,2,3),
y = com_herb_det_SS1, X = SS1_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20, starting.val = 0, multicore = TRUE)
n_latent_tab_SS1
n_latent_tab_SS1
n_latent_tab_SS1
n_latent_tab_SS1
SS1_predictors <- data.frame(treatments = treatments_SS1,
isolation = isolation_SS1,
isolation30120_480,
isolation30_120480)
#models <- parLapply(cl,num.lv, gllvm_lv)
stopCluster(cl)
run_multiple_lv2 <- function(num.lv, correction = TRUE, multicore = TRUE,
formula = NULL,
X = NULL,
y,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20,
starting.val = "residual"){
require(gllvm)
gllvm_lv <- function(num.lv, ...){
gllvm::gllvm(num.lv = num.lv, formula = formula,
X = X,
y = y,
family = family,
method = method,
n.init = n.init, seed = seed,
starting.val = starting.val)
}
#require(doParallel)
require(pbapply)
if(isTRUE(multicore)){
n_cores <- detectCores() - 2
message(paste("Using ", n_cores, " cores"))
registerDoParallel(cores=n_cores)
cl <- makeCluster(n_cores, type="PSOCK")
models <- pblapply(num.lv, FUN = gllvm_lv, cl = cl)
#models <- parLapply(cl,num.lv, gllvm_lv)
stopCluster(cl)
}else{
models <- pblapply(num.lv, FUN = gllvm_lv)
}
AICc_tab <- gllvm_AICc_tab(models, names = as.character(num.lv), order = FALSE, correction = correction)
return(list(AICc_tab = AICc_tab, models = models))
}
n_latent_tab_SS12 <- run_multiple_lv2(formula = ~ treatments * isolation,
num.lv = list(0,1,2,3),
y = com_herb_det_SS1, X = SS1_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20, starting.val = 0, multicore = TRUE)
SS1_predictors
SS1_predictors
n_latent_tab_SS12 <- run_multiple_lv2(formula = ~ treatments * isolation,
num.lv = list(0,1,2,3),
y = com_herb_det_SS1, X = SS1_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20, starting.val = 0, multicore = TRUE)
run_multiple_lv2 <- function(num.lv, correction = TRUE, multicore = TRUE,
formula = NULL,
X = NULL,
y,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20,
starting.val = "residual"){
require(gllvm)
gllvm_lv <- function(num.lv, ...){
gllvm::gllvm(num.lv = num.lv, formula = formula,
X = X,
y = y,
family = family,
method = method,
n.init = n.init, seed = seed,
starting.val = starting.val, ...)
}
#require(doParallel)
require(pbapply)
if(isTRUE(multicore)){
n_cores <- detectCores() - 2
message(paste("Using ", n_cores, " cores"))
registerDoParallel(cores=n_cores)
cl <- makeCluster(n_cores, type="PSOCK")
models <- pblapply(num.lv, FUN = gllvm_lv, cl = cl)
#models <- parLapply(cl,num.lv, gllvm_lv)
stopCluster(cl)
}else{
models <- pblapply(num.lv, FUN = gllvm_lv)
}
AICc_tab <- gllvm_AICc_tab(models, names = as.character(num.lv), order = FALSE, correction = correction)
return(list(AICc_tab = AICc_tab, models = models))
}
n_latent_tab_SS12 <- run_multiple_lv2(formula = ~ treatments * isolation,
num.lv = list(0,1,2,3),
y = com_herb_det_SS1, X = SS1_predictors,
family = "negative.binomial",
method = "VA",
n.init = 10, seed = 11:20, starting.val = 0, multicore = TRUE)
source("C:/Users/rodol/OneDrive/Trabalho/Papers/Analysis/IsolationAgrochemicals/Auxiliary scripts/run_multiple_lv2.R")
